{"version":3,"sources":["img/logo.png","config.js","axios.js","components/SearchField.js","components/ProfilePanel.js","components/NavBar.js","components/GirlImage.js","components/MainContent.js","containers/HomeScreen.js","containers/DetailScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","config","rootPath","axios","create","baseURL","withCredentials","SearchField","_handleTextChange","event","_this","props","onSearchChanged","target","value","react_default","a","createElement","className","onChange","this","type","placeholder","Component","ProfilePanel","display","username","onClick","onLogin","NavBar","components_SearchField","react_router_dom","to","height","src","logo","alt","components_ProfilePanel","GirlImage","comments","img","comment","map","class","createdBy","content","imageUrl","title","description","MainContent","allImages","images","key","_id","concat","components_GirlImage","HomeScreen","state","searchString","_onSearchChanged","text","setState","_this2","get","then","data","console","log","catch","err","_this3","displayedImages","filter","includes","components_NavBar","components_MainContent","DetailScreen","_savedComment","match","params","imageId","image","Object","defineProperty","printComment","App","_onLogin","post","password","response","id","react_router","exact","path","render","containers_HomeScreen","assign","containers_DetailScreen","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.797e9de3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b8e2d9e.png\";","export default{\r\n    rootPath: process.env.REACT_APP_STATE ==='localhost' ? 'http://localhost:6969' : ''\r\n};\r\n","import axios from 'axios';\r\nimport config from './config';\r\n\r\nexport default axios.create({\r\n  baseURL : config.rootPath,\r\n  withCredentials:true\r\n})","import React, { Component } from 'react';\r\n\r\nclass SearchField extends Component {\r\n    _handleTextChange = event => this.props.onSearchChanged(event.target.value);\r\n    render() {\r\n        return (\r\n            <form className=\"col-3\">\r\n                <input onChange={this._handleTextChange} className=\"form-control\" type=\"text\" placeholder=\"Search\" /> \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchField;","import React, { Component } from 'react';\r\n\r\nclass ProfilePanel extends Component {\r\n    render() {\r\n        const display = this.props.username ? (\r\n            <div>\r\n                <span className=\"navbar-text\">Welcome,{this.props.username}</span>\r\n            </div>\r\n        ) : (\r\n            <button className=\"btn btn-danger btn-block\" onClick={this.props.onLogin}>Login</button>\r\n        )\r\n        return (\r\n            <div className=\"col-3 profile_panel text-right\">\r\n                {display}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePanel;","import React, { Component } from 'react';\r\nimport SearchField from './SearchField';\r\nimport logo from '../img/logo.png';\r\nimport ProfilePanel from './ProfilePanel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className=\"container\">\r\n                    <SearchField onSearchChanged = {this.props.onSearchChanged}/>\r\n                    <div className=\"col-6 text-center\">\r\n                        <Link to={\"/\"}>\r\n                            <img height=\"80px\" src={logo} alt=\"mindx\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <ProfilePanel username={this.props.username} onLogin={this.props.onLogin}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport config from '../config';\r\n\r\nclass GirlImage extends Component {\r\n    render() {\r\n        const comments = this.props.img.comment ? (this.props.img.comment.map( comment => (\r\n        <p>\r\n            <span class=\"font-weight-bold\">\r\n                {comment.createdBy.username}\r\n            </span> : {\" \"}\r\n            {comment.content}\r\n        </p>\r\n        ))) : \"\"\r\n        return (\r\n            <div className=\"girl_image\">\r\n                <img className=\"img-fluid mx-auto\" src={config.rootPath + this.props.img.imageUrl} alt={this.props.img.title} />\r\n                <h4>{this.props.img.title}</h4>\r\n                <p>{this.props.img.description}</p>\r\n                {comments}                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GirlImage;","import React, { Component } from 'react';\r\nimport GirlImages from './GirlImage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainContent extends Component {\r\n    render() {\r\n        const allImages = this.props.images.map(img => \r\n            <div key={img._id} className=\"col-3\">\r\n                <Link to={`/images/${img._id}`} >\r\n                    <GirlImages img = {img} />\r\n                </Link>\r\n            </div>)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {allImages}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContent;","import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport MainContent from '../components/MainContent';\r\nimport axios from '../axios';\r\n\r\nclass HomeScreen extends Component {\r\n\r\n    state = {\r\n        images: [],\r\n        searchString: \"\"\r\n      }\r\n    \r\n      componentDidMount() {\r\n        axios\r\n        .get('/api/images')\r\n        .then( data => {\r\n          console.log(data.data);\r\n          console.log(this.props.username)\r\n          this.setState({images: data.data});\r\n        })\r\n        .catch( err => console.log(err))\r\n      }\r\n      \r\n    _onSearchChanged = text => this.setState({searchString : text});\r\n    render() {\r\n        const displayedImages = this.state.images.filter(img => img.title.includes(this.state.searchString) || img.description.includes(this.state.searchString))\r\n        return (\r\n            <div>\r\n                <NavBar username={this.props.username} onLogin={this.props.onLogin} onSearchChanged={this._onSearchChanged}/>\r\n                <MainContent images={displayedImages} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeScreen;","import React, { Component } from 'react';\r\nimport axios from '../axios';\r\nimport NavBar from '../components/NavBar';\r\nimport GirlImage from '../components/GirlImage';\r\n\r\nclass DetailScreen extends Component {\r\n    state = {}\r\n\r\n    _savedComment = text => this.setState({comment: text});\r\n\r\n    componentDidMount() {\r\n        axios\r\n        .get(`/api/images/${this.props.match.params.imageId}`)\r\n        .then( data => {\r\n            console.log(data.data)\r\n            this.setState({image: data.data});\r\n        })\r\n        .catch( err => console.log(err))\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar username={this.props.username} onLogin={this.props.onLogin} onSearchChanged={this.props.onSearchChanged}/>\r\n                <div className=\"main_content\" className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"mx-auto\">\r\n                            {this.state.image ? <GirlImage printComment={this._savedComment} username={this.props.username} img={this.state.image} /> : \"\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailScreen;","import React,{Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from './axios';\nimport HomeScreen from './containers/HomeScreen';\nimport DetailScreen from './containers/DetailScreen';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nclass App extends Component {\n\n  state = {}\n\n  _onLogin = () => {\n    axios\n    .post(\"/api/auth\",{\n      username: \"admin\",\n      password: \"123456\"\n    })\n    .then( response =>\n      this.setState({\n        username: response.data.username,\n        id: response.data.id\n      })\n    )\n    .catch( err => console.log(err) )\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\"\n          render={ props => {\n            return <HomeScreen \n            {...props}\n            username={this.state.username}\n            onLogin={this._onLogin}\n            \n            />\n          }} \n          />\n          <Route path=\"/images/:imageId\" \n          render={ props => {\n            return <DetailScreen \n            {...props}\n            username={this.state.username}\n            onLogin={this._onLogin}\n            \n            />\n          }} \n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}